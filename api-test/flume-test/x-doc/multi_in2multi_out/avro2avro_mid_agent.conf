# 功能: flume2 启动netcat监听指定端口,将接收的数据实时传递给下一个flume3

#  nohup bin/flume-ng agent  --conf conf/ --name avro2avro_mid_agent --conf-file agent/multi_in2multi_out/avro2avro_mid_agent.conf 2>&1 &

# step1: 声明3大组件
avro2avro_mid_agent.sources = r1
avro2avro_mid_agent.sinks = k1 k2
avro2avro_mid_agent.channels = c1 c2

## 将数据流复制给多个channel
avro2avro_mid_agent.sources.r1.selector.type = replicating

# step2: 定义source组件(flume对接,从本机4141端口获取数据)
avro2avro_mid_agent.sources.r1.type = avro
avro2avro_mid_agent.sources.r1.bind = localhost
avro2avro_mid_agent.sources.r1.port = 4141


# step3-1: 定义sink组件(将本机4141端口接收的数据发送给flume3的4142端口)
avro2avro_mid_agent.sinks.k1.type = avro
avro2avro_mid_agent.sinks.k1.hostname = localhost
avro2avro_mid_agent.sinks.k1.port = 4142

# step3-2: 定义k1 组件,基于文件滚动机制,保存在本地文件系统
avro2avro_mid_agent.sinks.k2.type = file_roll
avro2avro_mid_agent.sinks.k2.sink.directory = /Users/huhao/software/flume-1.8.0/tmp2


# step4-1: 定义c1组件(基于内存构建Event事件队列)队列负载:允许1000个Event并行上传,100个事务并发执行
avro2avro_mid_agent.channels.c1.type = memory
avro2avro_mid_agent.channels.c1.capacity = 1000
avro2avro_mid_agent.channels.c1.transactionCapacity = 100

# step4-2: 定义c2组件(基于内存构建Event事件队列)队列负载:允许1000个Event并行上传,100个事务并发执行
avro2avro_mid_agent.channels.c2.type = memory
avro2avro_mid_agent.channels.c2.capacity = 1000
avro2avro_mid_agent.channels.c2.transactionCapacity = 100

# step5: 组装
avro2avro_mid_agent.sources.r1.channels = c1 c2
avro2avro_mid_agent.sinks.k1.channel = c1
avro2avro_mid_agent.sinks.k2.channel = c2
